{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-172-31-2-148.us-gov-west-1.compute.internal",
                "selfLink": "/api/v1/nodes/ip-172-31-2-148.us-gov-west-1.compute.internal",
                "uid": "9542cfad-43f7-40b9-9d1a-254459c9827c",
                "resourceVersion": "209423",
                "creationTimestamp": "2021-03-02T21:46:05Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t3.medium",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "testNodeGroup",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f9c064528d082f4f",
                    "failure-domain.beta.kubernetes.io/region": "us-gov-west-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-gov-west-1c",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-172-31-2-148.us-gov-west-1.compute.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t3.medium",
                    "topology.kubernetes.io/region": "us-gov-west-1",
                    "topology.kubernetes.io/zone": "us-gov-west-1c"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                },
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:06Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:node.alpha.kubernetes.io/ttl": {}
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:beta.kubernetes.io/arch": {},
                                    "f:beta.kubernetes.io/instance-type": {},
                                    "f:beta.kubernetes.io/os": {},
                                    "f:eks.amazonaws.com/capacityType": {},
                                    "f:eks.amazonaws.com/nodegroup": {},
                                    "f:eks.amazonaws.com/nodegroup-image": {},
                                    "f:failure-domain.beta.kubernetes.io/region": {},
                                    "f:failure-domain.beta.kubernetes.io/zone": {},
                                    "f:kubernetes.io/arch": {},
                                    "f:kubernetes.io/hostname": {},
                                    "f:kubernetes.io/os": {},
                                    "f:node.kubernetes.io/instance-type": {},
                                    "f:topology.kubernetes.io/region": {},
                                    "f:topology.kubernetes.io/zone": {}
                                }
                            },
                            "f:spec": {
                                "f:providerID": {}
                            },
                            "f:status": {
                                "f:addresses": {
                                    ".": {},
                                    "k:{\"type\":\"ExternalDNS\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"ExternalIP\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Hostname\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"InternalDNS\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"InternalIP\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    }
                                },
                                "f:allocatable": {
                                    ".": {},
                                    "f:attachable-volumes-aws-ebs": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-1Gi": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:capacity": {
                                    ".": {},
                                    "f:attachable-volumes-aws-ebs": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-1Gi": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"DiskPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"MemoryPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"PIDPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:daemonEndpoints": {
                                    "f:kubeletEndpoint": {
                                        "f:Port": {}
                                    }
                                },
                                "f:images": {},
                                "f:nodeInfo": {
                                    "f:architecture": {},
                                    "f:bootID": {},
                                    "f:containerRuntimeVersion": {},
                                    "f:kernelVersion": {},
                                    "f:kubeProxyVersion": {},
                                    "f:kubeletVersion": {},
                                    "f:machineID": {},
                                    "f:operatingSystem": {},
                                    "f:osImage": {},
                                    "f:systemUUID": {}
                                }
                            }
                        }
                    }
                ]
            },
            "spec": {
                "providerID": "aws:///us-gov-west-1c/i-001b7c6a177289a77"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "20959212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3970504Ki",
                    "pods": "17"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "18242267924",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3415496Ki",
                    "pods": "17"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:09Z",
                        "lastTransitionTime": "2021-03-02T21:46:05Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:09Z",
                        "lastTransitionTime": "2021-03-02T21:46:05Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:09Z",
                        "lastTransitionTime": "2021-03-02T21:46:05Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-03-03T18:23:09Z",
                        "lastTransitionTime": "2021-03-02T21:46:36Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.31.2.148"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "160.1.13.158"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-172-31-2-148.us-gov-west-1.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-172-31-2-148.us-gov-west-1.compute.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-160-1-13-158.us-gov-west-1.compute.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec24914e06a631488c464e285cfbe0cd",
                    "systemUUID": "ec24914e-06a6-3148-8c46-4e285cfbe0cd",
                    "bootID": "962f6b04-fc77-4de9-b23f-de73ecd0a359",
                    "kernelVersion": "5.4.91-41.139.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://19.3.6",
                    "kubeletVersion": "v1.19.6-eks-49a6c0",
                    "kubeProxyVersion": "v1.19.6-eks-49a6c0",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:f310c918ee2b4ebced76d2d64a2ec128dde3b364d1b495f0ae73011f489d474d",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.5-eksbuild.1"
                        ],
                        "sizeBytes": 312076970
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:d96d712513464de6ce94e422634a25546565418f20d1b28d3bce399d578f3296",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.5-eksbuild.1"
                        ],
                        "sizeBytes": 287782202
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:bf321746d8a281e6a1437cb2b008953be2a729773938fa759c02ee2e9ba140b7",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1"
                        ],
                        "sizeBytes": 280645106
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:8c1cd211997f191166ddae0bc23ef830aee01affbe2c803676eff3d1a6087e9a",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1"
                        ],
                        "sizeBytes": 251814477
                    },
                    {
                        "names": [
                            "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial@sha256:a2ec17bf0f75b2a17c929b612b5267dcd0c522a9458494fadae00f4d176e5300",
                            "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial:latest"
                        ],
                        "sizeBytes": 143055593
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy@sha256:645736a55833f2b4a4785448d8da1c7add549d73943e8f9c893c696add1bed95",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2"
                        ],
                        "sizeBytes": 134070019
                    },
                    {
                        "names": [
                            "jettech/kube-webhook-certgen@sha256:950833e19ade18cd389d647efb88992a7cc077abedef343fa59e012d376d79b7",
                            "jettech/kube-webhook-certgen:v1.5.1"
                        ],
                        "sizeBytes": 44692736
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                "selfLink": "/api/v1/nodes/ip-172-31-40-192.us-gov-west-1.compute.internal",
                "uid": "4324af8f-4fc1-4883-9acb-692a87472be2",
                "resourceVersion": "209403",
                "creationTimestamp": "2021-03-02T21:46:02Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t3.medium",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "testNodeGroup",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f9c064528d082f4f",
                    "failure-domain.beta.kubernetes.io/region": "us-gov-west-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-gov-west-1a",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t3.medium",
                    "topology.kubernetes.io/region": "us-gov-west-1",
                    "topology.kubernetes.io/zone": "us-gov-west-1a"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                },
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:02Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:node.alpha.kubernetes.io/ttl": {}
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:33Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:volumes.kubernetes.io/controller-managed-attach-detach": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:beta.kubernetes.io/arch": {},
                                    "f:beta.kubernetes.io/instance-type": {},
                                    "f:beta.kubernetes.io/os": {},
                                    "f:eks.amazonaws.com/capacityType": {},
                                    "f:eks.amazonaws.com/nodegroup": {},
                                    "f:eks.amazonaws.com/nodegroup-image": {},
                                    "f:failure-domain.beta.kubernetes.io/region": {},
                                    "f:failure-domain.beta.kubernetes.io/zone": {},
                                    "f:kubernetes.io/arch": {},
                                    "f:kubernetes.io/hostname": {},
                                    "f:kubernetes.io/os": {},
                                    "f:node.kubernetes.io/instance-type": {},
                                    "f:topology.kubernetes.io/region": {},
                                    "f:topology.kubernetes.io/zone": {}
                                }
                            },
                            "f:spec": {
                                "f:providerID": {}
                            },
                            "f:status": {
                                "f:addresses": {
                                    ".": {},
                                    "k:{\"type\":\"Hostname\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"InternalDNS\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"InternalIP\"}": {
                                        ".": {},
                                        "f:address": {},
                                        "f:type": {}
                                    }
                                },
                                "f:allocatable": {
                                    ".": {},
                                    "f:attachable-volumes-aws-ebs": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-1Gi": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:capacity": {
                                    ".": {},
                                    "f:attachable-volumes-aws-ebs": {},
                                    "f:cpu": {},
                                    "f:ephemeral-storage": {},
                                    "f:hugepages-1Gi": {},
                                    "f:hugepages-2Mi": {},
                                    "f:memory": {},
                                    "f:pods": {}
                                },
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"DiskPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"MemoryPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"PIDPressure\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastHeartbeatTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:daemonEndpoints": {
                                    "f:kubeletEndpoint": {
                                        "f:Port": {}
                                    }
                                },
                                "f:images": {},
                                "f:nodeInfo": {
                                    "f:architecture": {},
                                    "f:bootID": {},
                                    "f:containerRuntimeVersion": {},
                                    "f:kernelVersion": {},
                                    "f:kubeProxyVersion": {},
                                    "f:kubeletVersion": {},
                                    "f:machineID": {},
                                    "f:operatingSystem": {},
                                    "f:osImage": {},
                                    "f:systemUUID": {}
                                }
                            }
                        }
                    }
                ]
            },
            "spec": {
                "providerID": "aws:///us-gov-west-1a/i-04a08e9ee04f65353"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "2",
                    "ephemeral-storage": "20959212Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3970504Ki",
                    "pods": "17"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "25",
                    "cpu": "1930m",
                    "ephemeral-storage": "18242267924",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "3415496Ki",
                    "pods": "17"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:04Z",
                        "lastTransitionTime": "2021-03-02T21:46:02Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:04Z",
                        "lastTransitionTime": "2021-03-02T21:46:02Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2021-03-03T18:23:04Z",
                        "lastTransitionTime": "2021-03-02T21:46:02Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2021-03-03T18:23:04Z",
                        "lastTransitionTime": "2021-03-02T21:46:23Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.31.40.192"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-172-31-40-192.us-gov-west-1.compute.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-172-31-40-192.us-gov-west-1.compute.internal"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "ec22e26a744f99f17017fa2d89b8419c",
                    "systemUUID": "ec22e26a-744f-99f1-7017-fa2d89b8419c",
                    "bootID": "efbf4669-e391-4c44-90f4-b62a803dda81",
                    "kernelVersion": "5.4.91-41.139.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://19.3.6",
                    "kubeletVersion": "v1.19.6-eks-49a6c0",
                    "kubeProxyVersion": "v1.19.6-eks-49a6c0",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:f310c918ee2b4ebced76d2d64a2ec128dde3b364d1b495f0ae73011f489d474d",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.5-eksbuild.1"
                        ],
                        "sizeBytes": 312076970
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:d96d712513464de6ce94e422634a25546565418f20d1b28d3bce399d578f3296",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.5-eksbuild.1"
                        ],
                        "sizeBytes": 287782202
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:bf321746d8a281e6a1437cb2b008953be2a729773938fa759c02ee2e9ba140b7",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1"
                        ],
                        "sizeBytes": 280645106
                    },
                    {
                        "names": [
                            "k8s.gcr.io/ingress-nginx/controller@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a"
                        ],
                        "sizeBytes": 278507478
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:8c1cd211997f191166ddae0bc23ef830aee01affbe2c803676eff3d1a6087e9a",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1"
                        ],
                        "sizeBytes": 251814477
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy@sha256:645736a55833f2b4a4785448d8da1c7add549d73943e8f9c893c696add1bed95",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2"
                        ],
                        "sizeBytes": 134070019
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns@sha256:2c052b1be8bf1fc8dd97222c48d317ff41d69dcfccd2f9cde97e99cb9df4f88c",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1"
                        ],
                        "sizeBytes": 46908966
                    },
                    {
                        "names": [
                            "jettech/kube-webhook-certgen@sha256:950833e19ade18cd389d647efb88992a7cc077abedef343fa59e012d376d79b7",
                            "jettech/kube-webhook-certgen:v1.5.1"
                        ],
                        "sizeBytes": 44692736
                    },
                    {
                        "names": [
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "210274"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "210274"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "b62958ef-a626-41bc-8348-9f6ecdc26876",
                "resourceVersion": "181",
                "creationTimestamp": "2021-03-02T21:41:28Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-dns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"kube-dns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.100.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                },
                "managedFields": [
                    {
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:41:28Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                    "f:prometheus.io/port": {},
                                    "f:prometheus.io/scrape": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {},
                                    "f:kubernetes.io/cluster-service": {},
                                    "f:kubernetes.io/name": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":53,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":53,\"protocol\":\"UDP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:k8s-app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.100.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/aws-node",
                "uid": "a39c0725-d717-4182-b346-76ca207129d1",
                "resourceVersion": "1567",
                "generation": 2,
                "creationTimestamp": "2021-03-02T21:41:28Z",
                "labels": {
                    "k8s-app": "aws-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"aws-node\"},\"name\":\"aws-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"aws-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"aws-node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"env\":[{\"name\":\"ADDITIONAL_ENI_TAGS\",\"value\":\"{}\"},{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\",\"value\":\"true\"},{\"name\":\"AWS_VPC_ENI_MTU\",\"value\":\"9001\"},{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\",\"value\":\"DEBUG\"},{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\",\"value\":\"/host/var/log/aws-routed-eni/ipamd.log\"},{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\",\"value\":\"prng\"},{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\",\"value\":\"eni\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\",\"value\":\"/var/log/aws-routed-eni/plugin.log\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\",\"value\":\"DEBUG\"},{\"name\":\"DISABLE_INTROSPECTION\",\"value\":\"false\"},{\"name\":\"DISABLE_METRICS\",\"value\":\"false\"},{\"name\":\"ENABLE_POD_ENI\",\"value\":\"false\"},{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"WARM_ENI_TARGET\",\"value\":\"1\"}],\"image\":\"013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.5-eksbuild.1\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\"]},\"initialDelaySeconds\":60},\"name\":\"aws-node\",\"ports\":[{\"containerPort\":61678,\"name\":\"metrics\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\"]},\"initialDelaySeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"10m\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"},{\"mountPath\":\"/host/var/log/aws-routed-eni\",\"name\":\"log-dir\"},{\"mountPath\":\"/var/run/aws-node\",\"name\":\"run-dir\"},{\"mountPath\":\"/var/run/dockershim.sock\",\"name\":\"dockershim\"},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"false\"}],\"image\":\"013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.5-eksbuild.1\",\"imagePullPolicy\":\"Always\",\"name\":\"aws-vpc-cni-init\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aws-node\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/run/dockershim.sock\"},\"name\":\"dockershim\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/var/log/aws-routed-eni\",\"type\":\"DirectoryOrCreate\"},\"name\":\"log-dir\"},{\"hostPath\":{\"path\":\"/var/run/aws-node\",\"type\":\"DirectoryOrCreate\"},\"name\":\"run-dir\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                },
                "managedFields": [
                    {
                        "manager": "eks",
                        "operation": "Apply",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:47:02Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:selector": {
                                    "f:matchLabels": {
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app.kubernetes.io/name": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            "f:nodeAffinity": {
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                    "f:nodeSelectorTerms": {}
                                                }
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"aws-node\"}": {
                                                ".": {},
                                                "f:env": {
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {
                                                                "f:fieldPath": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    "f:exec": {
                                                        "f:command": {}
                                                    },
                                                    "f:initialDelaySeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    "f:exec": {
                                                        "f:command": {}
                                                    },
                                                    "f:initialDelaySeconds": {}
                                                },
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    "f:capabilities": {
                                                        "f:add": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/dockershim.sock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:hostNetwork": {},
                                        "f:initContainers": {
                                            "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:securityContext": {
                                                    "f:privileged": {}
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:priorityClassName": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            "k:{\"name\":\"cni-bin-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"cni-net-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"dockershim\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"log-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"run-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"xtables-lock\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    "f:path": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:rollingUpdate": {
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:41:28Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deprecated.daemonset.template.generation": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:nodeAffinity": {
                                                ".": {},
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                    ".": {},
                                                    "f:nodeSelectorTerms": {}
                                                }
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"aws-node\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {
                                                                ".": {},
                                                                "f:apiVersion": {},
                                                                "f:fieldPath": {}
                                                            }
                                                        }
                                                    },
                                                    "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:exec": {
                                                        ".": {},
                                                        "f:command": {}
                                                    },
                                                    "f:failureThreshold": {},
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:exec": {
                                                        ".": {},
                                                        "f:command": {}
                                                    },
                                                    "f:failureThreshold": {},
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/dockershim.sock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:hostNetwork": {},
                                        "f:initContainers": {
                                            ".": {},
                                            "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:privileged": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"cni-bin-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"cni-net-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"dockershim\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"log-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"run-dir\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"xtables-lock\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:48:09Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:currentNumberScheduled": {},
                                "f:desiredNumberScheduled": {},
                                "f:numberAvailable": {},
                                "f:numberReady": {},
                                "f:observedGeneration": {},
                                "f:updatedNumberScheduled": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "aws-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/name": "aws-node",
                            "k8s-app": "aws-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "dockershim",
                                "hostPath": {
                                    "path": "/var/run/dockershim.sock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "log-dir",
                                "hostPath": {
                                    "path": "/var/log/aws-routed-eni",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "run-dir",
                                "hostPath": {
                                    "path": "/var/run/aws-node",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "aws-vpc-cni-init",
                                "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1",
                                "env": [
                                    {
                                        "name": "DISABLE_TCP_EARLY_DEMUX",
                                        "value": "false"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "aws-node",
                                "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1",
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 61678,
                                        "containerPort": 61678,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "ADDITIONAL_ENI_TAGS",
                                        "value": "{}"
                                    },
                                    {
                                        "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AWS_VPC_ENI_MTU",
                                        "value": "9001"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                        "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                        "value": "prng"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                        "value": "eni"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                        "value": "/var/log/aws-routed-eni/plugin.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "DISABLE_INTROSPECTION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "DISABLE_METRICS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_POD_ENI",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WARM_ENI_TARGET",
                                        "value": "1"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "log-dir",
                                        "mountPath": "/host/var/log/aws-routed-eni"
                                    },
                                    {
                                        "name": "run-dir",
                                        "mountPath": "/var/run/aws-node"
                                    },
                                    {
                                        "name": "dockershim",
                                        "mountPath": "/var/run/dockershim.sock"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051"
                                        ]
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 10,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aws-node",
                        "serviceAccount": "aws-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%"
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 2,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
                "uid": "8a0602e1-081e-4d70-8f47-28dd5d9a4da1",
                "resourceVersion": "1127",
                "generation": 1,
                "creationTimestamp": "2021-03-02T21:41:28Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-proxy",
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kube-proxy\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--v=2\",\"--config=/var/lib/kube-proxy-config/config\"],\"image\":\"013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":false},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/var/lib/kube-proxy/\",\"name\":\"kubeconfig\"},{\"mountPath\":\"/var/lib/kube-proxy-config/\",\"name\":\"config\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"configMap\":{\"name\":\"kube-proxy\"},\"name\":\"kubeconfig\"},{\"configMap\":{\"name\":\"kube-proxy-config\"},\"name\":\"config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                },
                "managedFields": [
                    {
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:41:28Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deprecated.daemonset.template.generation": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {}
                                }
                            },
                            "f:spec": {
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:nodeAffinity": {
                                                ".": {},
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                    ".": {},
                                                    "f:nodeSelectorTerms": {}
                                                }
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"kube-proxy\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    ".": {},
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:privileged": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/lib/modules\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/log\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:hostNetwork": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"kubeconfig\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"lib-modules\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"varlog\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"xtables-lock\"}": {
                                                ".": {},
                                                "f:hostPath": {
                                                    ".": {},
                                                    "f:path": {},
                                                    "f:type": {}
                                                },
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:46:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:currentNumberScheduled": {},
                                "f:desiredNumberScheduled": {},
                                "f:numberAvailable": {},
                                "f:numberReady": {},
                                "f:observedGeneration": {},
                                "f:updatedNumberScheduled": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "varlog",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "kube-proxy-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2",
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "varlog",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "mountPath": "/var/lib/kube-proxy/"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/var/lib/kube-proxy-config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%"
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "ffdbe698-b663-4321-a7df-eb88aa5059cc",
                "resourceVersion": "1238",
                "generation": 1,
                "creationTimestamp": "2021-03-02T21:41:28Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                },
                "managedFields": [
                    {
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:41:28Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {},
                                    "f:kubernetes.io/name": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:eks.amazonaws.com/component": {},
                                        "f:k8s-app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/compute-type": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:eks.amazonaws.com/component": {},
                                            "f:k8s-app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:nodeAffinity": {
                                                ".": {},
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                    ".": {},
                                                    "f:nodeSelectorTerms": {}
                                                }
                                            },
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"coredns\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:46:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2021-03-02T21:46:32Z",
                        "lastTransitionTime": "2021-03-02T21:46:32Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2021-03-02T21:46:36Z",
                        "lastTransitionTime": "2021-03-02T21:41:38Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-5cf64856b4\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5cf64856b4",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-5cf64856b4",
                "uid": "dfc7a79b-1bf2-4297-986c-2278700ef154",
                "resourceVersion": "1237",
                "generation": 1,
                "creationTimestamp": "2021-03-02T21:41:38Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5cf64856b4"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "ffdbe698-b663-4321-a7df-eb88aa5059cc",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-02T21:46:32Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"ffdbe698-b663-4321-a7df-eb88aa5059cc\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:eks.amazonaws.com/component": {},
                                        "f:k8s-app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/compute-type": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:eks.amazonaws.com/component": {},
                                            "f:k8s-app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            ".": {},
                                            "f:nodeAffinity": {
                                                ".": {},
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                    ".": {},
                                                    "f:nodeSelectorTerms": {}
                                                }
                                            },
                                            "f:podAntiAffinity": {
                                                ".": {},
                                                "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"coredns\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:allowPrivilegeEscalation": {},
                                                    "f:capabilities": {
                                                        ".": {},
                                                        "f:add": {},
                                                        "f:drop": {}
                                                    },
                                                    "f:readOnlyRootFilesystem": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/tmp\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:priorityClassName": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:tolerations": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"config-volume\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:items": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"tmp\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5cf64856b4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5cf64856b4"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "210274"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-m4glb",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-m4glb",
                "uid": "dafcc861-ded6-4f44-b90e-fb282852d2e3",
                "resourceVersion": "1460",
                "creationTimestamp": "2021-03-02T21:47:22Z",
                "labels": {
                    "app.kubernetes.io/name": "aws-node",
                    "controller-revision-hash": "5c9cc7b9f6",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "2"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "a39c0725-d717-4182-b346-76ca207129d1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:47:22Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:controller-revision-hash": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-generation": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"a39c0725-d717-4182-b346-76ca207129d1\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"aws-node\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {
                                                        ".": {},
                                                        "f:apiVersion": {},
                                                        "f:fieldPath": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:exec": {
                                                ".": {},
                                                "f:command": {}
                                            },
                                            "f:failureThreshold": {},
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:exec": {
                                                ".": {},
                                                "f:command": {}
                                            },
                                            "f:failureThreshold": {},
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/dockershim.sock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostNetwork": {},
                                "f:initContainers": {
                                    ".": {},
                                    "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:privileged": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"cni-bin-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"cni-net-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"dockershim\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"log-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"run-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"xtables-lock\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:47:41Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:initContainerStatuses": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.40.192\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "aws-node-token-snst5",
                        "secret": {
                            "secretName": "aws-node-token-snst5",
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "aws-node-token-snst5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "aws-node-token-snst5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-172-31-40-192.us-gov-west-1.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:47:31Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:47:41Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:47:41Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:47:22Z"
                    }
                ],
                "hostIP": "172.31.40.192",
                "podIP": "172.31.40.192",
                "podIPs": [
                    {
                        "ip": "172.31.40.192"
                    }
                ],
                "startTime": "2021-03-02T21:47:22Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2021-03-02T21:47:31Z",
                                "finishedAt": "2021-03-02T21:47:31Z",
                                "containerID": "docker://4cd454ed285237ebea139b3b4ea64dad4baf1481e6e7b1d0ee07f38421a0b727"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:8c1cd211997f191166ddae0bc23ef830aee01affbe2c803676eff3d1a6087e9a",
                        "containerID": "docker://4cd454ed285237ebea139b3b4ea64dad4baf1481e6e7b1d0ee07f38421a0b727"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:47:34Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:bf321746d8a281e6a1437cb2b008953be2a729773938fa759c02ee2e9ba140b7",
                        "containerID": "docker://79fee266a298429fd202b619eef854ba795877fd88dd144f9494d87fd865283c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-vd6lg",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/aws-node-vd6lg",
                "uid": "5bd96501-7485-4c86-bc33-a244b12091e0",
                "resourceVersion": "1566",
                "creationTimestamp": "2021-03-02T21:47:52Z",
                "labels": {
                    "app.kubernetes.io/name": "aws-node",
                    "controller-revision-hash": "5c9cc7b9f6",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "2"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "a39c0725-d717-4182-b346-76ca207129d1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:47:52Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/name": {},
                                    "f:controller-revision-hash": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-generation": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"a39c0725-d717-4182-b346-76ca207129d1\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"aws-node\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ADDITIONAL_ENI_TAGS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_ENI_MTU\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DISABLE_INTROSPECTION\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DISABLE_METRICS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ENABLE_POD_ENI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {
                                                        ".": {},
                                                        "f:apiVersion": {},
                                                        "f:fieldPath": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"WARM_ENI_TARGET\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:exec": {
                                                ".": {},
                                                "f:command": {}
                                            },
                                            "f:failureThreshold": {},
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":61678,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:exec": {
                                                ".": {},
                                                "f:command": {}
                                            },
                                            "f:failureThreshold": {},
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/host/var/log/aws-routed-eni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/aws-node\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/dockershim.sock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostNetwork": {},
                                "f:initContainers": {
                                    ".": {},
                                    "k:{\"name\":\"aws-vpc-cni-init\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DISABLE_TCP_EARLY_DEMUX\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:privileged": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"cni-bin-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"cni-net-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"dockershim\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"log-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"run-dir\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"xtables-lock\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:48:09Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:initContainerStatuses": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.2.148\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "aws-node-token-snst5",
                        "secret": {
                            "secretName": "aws-node-token-snst5",
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "aws-node-token-snst5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "aws-node-token-snst5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-172-31-2-148.us-gov-west-1.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-172-31-2-148.us-gov-west-1.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:48:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:48:09Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:48:09Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:47:52Z"
                    }
                ],
                "hostIP": "172.31.2.148",
                "podIP": "172.31.2.148",
                "podIPs": [
                    {
                        "ip": "172.31.2.148"
                    }
                ],
                "startTime": "2021-03-02T21:47:52Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2021-03-02T21:47:59Z",
                                "finishedAt": "2021-03-02T21:47:59Z",
                                "containerID": "docker://1e0d0e21735d94162e0a01a6c517e6a66a785c077afda28067e158cb62944a62"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init:v1.7.9-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni-init@sha256:8c1cd211997f191166ddae0bc23ef830aee01affbe2c803676eff3d1a6087e9a",
                        "containerID": "docker://1e0d0e21735d94162e0a01a6c517e6a66a785c077afda28067e158cb62944a62"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:48:02Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni:v1.7.9-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/amazon-k8s-cni@sha256:bf321746d8a281e6a1437cb2b008953be2a729773938fa759c02ee2e9ba140b7",
                        "containerID": "docker://f27073f470c425d75bd0a13f2ddcb5e60904b1f5f334e51a78d75a13048b4165",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5cf64856b4-cgsml",
                "generateName": "coredns-5cf64856b4-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-5cf64856b4-cgsml",
                "uid": "ffbb9381-35c1-46c4-b270-754410f0676a",
                "resourceVersion": "1215",
                "creationTimestamp": "2021-03-02T21:41:38Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5cf64856b4"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5cf64856b4",
                        "uid": "dfc7a79b-1bf2-4297-986c-2278700ef154",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:41:38Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:eks.amazonaws.com/compute-type": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"dfc7a79b-1bf2-4297-986c-2278700ef154\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    },
                                    "f:podAntiAffinity": {
                                        ".": {},
                                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"coredns\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:allowPrivilegeEscalation": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {},
                                                "f:drop": {}
                                            },
                                            "f:readOnlyRootFilesystem": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/tmp\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config-volume\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:items": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"tmp\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-scheduler",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:42:05Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"PodScheduled\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:32Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.40.13\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-kf9pt",
                        "secret": {
                            "secretName": "coredns-token-kf9pt",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-kf9pt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:32Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:32Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:24Z"
                    }
                ],
                "hostIP": "172.31.40.192",
                "podIP": "172.31.40.13",
                "podIPs": [
                    {
                        "ip": "172.31.40.13"
                    }
                ],
                "startTime": "2021-03-02T21:46:24Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:46:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns@sha256:2c052b1be8bf1fc8dd97222c48d317ff41d69dcfccd2f9cde97e99cb9df4f88c",
                        "containerID": "docker://068991525c9d8ecf74a010d145feb411956d7472e0806d62bbc2d1d3b06d5be8",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5cf64856b4-wjr2w",
                "generateName": "coredns-5cf64856b4-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-5cf64856b4-wjr2w",
                "uid": "57a5d24e-2218-4479-977f-d79ee291c93f",
                "resourceVersion": "1234",
                "creationTimestamp": "2021-03-02T21:41:38Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5cf64856b4"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5cf64856b4",
                        "uid": "dfc7a79b-1bf2-4297-986c-2278700ef154",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:41:38Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:eks.amazonaws.com/compute-type": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:eks.amazonaws.com/component": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"dfc7a79b-1bf2-4297-986c-2278700ef154\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    },
                                    "f:podAntiAffinity": {
                                        ".": {},
                                        "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"coredns\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:allowPrivilegeEscalation": {},
                                            "f:capabilities": {
                                                ".": {},
                                                "f:add": {},
                                                "f:drop": {}
                                            },
                                            "f:readOnlyRootFilesystem": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/coredns\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/tmp\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config-volume\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:items": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"tmp\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-scheduler",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:42:05Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"PodScheduled\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:36Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.40.223\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-kf9pt",
                        "secret": {
                            "secretName": "coredns-token-kf9pt",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "coredns-token-kf9pt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:24Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:36Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:36Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:24Z"
                    }
                ],
                "hostIP": "172.31.40.192",
                "podIP": "172.31.40.223",
                "podIPs": [
                    {
                        "ip": "172.31.40.223"
                    }
                ],
                "startTime": "2021-03-02T21:46:24Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:46:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns:v1.8.0-eksbuild.1",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/coredns@sha256:2c052b1be8bf1fc8dd97222c48d317ff41d69dcfccd2f9cde97e99cb9df4f88c",
                        "containerID": "docker://11c5972598030e69c6a1770fb24bc8c48003a60fc0747e66eb699ec62233b12a",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-ggx6v",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-ggx6v",
                "uid": "a1c2de4d-fa12-4d9c-96ae-ef8e18221bb2",
                "resourceVersion": "1103",
                "creationTimestamp": "2021-03-02T21:46:02Z",
                "labels": {
                    "controller-revision-hash": "7b6cc59c8",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "8a0602e1-081e-4d70-8f47-28dd5d9a4da1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:02Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:controller-revision-hash": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-generation": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"8a0602e1-081e-4d70-8f47-28dd5d9a4da1\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"kube-proxy\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:privileged": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/lib/modules\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostNetwork": {},
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"kubeconfig\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"lib-modules\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"varlog\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"xtables-lock\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:13Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.40.192\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-zswx2",
                        "secret": {
                            "secretName": "kube-proxy-token-zswx2",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-zswx2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-172-31-40-192.us-gov-west-1.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-172-31-40-192.us-gov-west-1.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:03Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:13Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:13Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:03Z"
                    }
                ],
                "hostIP": "172.31.40.192",
                "podIP": "172.31.40.192",
                "podIPs": [
                    {
                        "ip": "172.31.40.192"
                    }
                ],
                "startTime": "2021-03-02T21:46:03Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:46:12Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy@sha256:645736a55833f2b4a4785448d8da1c7add549d73943e8f9c893c696add1bed95",
                        "containerID": "docker://a19e6625b62db569e15c0aaf24f9cd25b87143f8b27f38ebbcde863c7613b72f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-qmw6k",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-proxy-qmw6k",
                "uid": "67642214-e325-41e1-8ca6-205f133af0c7",
                "resourceVersion": "1126",
                "creationTimestamp": "2021-03-02T21:46:06Z",
                "labels": {
                    "controller-revision-hash": "7b6cc59c8",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "8a0602e1-081e-4d70-8f47-28dd5d9a4da1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:06Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:controller-revision-hash": {},
                                    "f:k8s-app": {},
                                    "f:pod-template-generation": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"8a0602e1-081e-4d70-8f47-28dd5d9a4da1\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:nodeAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                            ".": {},
                                            "f:nodeSelectorTerms": {}
                                        }
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"kube-proxy\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {}
                                            }
                                        },
                                        "f:securityContext": {
                                            ".": {},
                                            "f:privileged": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/lib/modules\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/kube-proxy-config/\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/kube-proxy/\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostNetwork": {},
                                "f:priorityClassName": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:tolerations": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"config\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"kubeconfig\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"lib-modules\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"varlog\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"xtables-lock\"}": {
                                        ".": {},
                                        "f:hostPath": {
                                            ".": {},
                                            "f:path": {},
                                            "f:type": {}
                                        },
                                        "f:name": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:46:16Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.2.148\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-proxy-token-zswx2",
                        "secret": {
                            "secretName": "kube-proxy-token-zswx2",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-proxy-token-zswx2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-172-31-2-148.us-gov-west-1.compute.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-172-31-2-148.us-gov-west-1.compute.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:06Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:16Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:16Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-02T21:46:06Z"
                    }
                ],
                "hostIP": "172.31.2.148",
                "podIP": "172.31.2.148",
                "podIPs": [
                    {
                        "ip": "172.31.2.148"
                    }
                ],
                "startTime": "2021-03-02T21:46:06Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-02T21:46:16Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy:v1.19.6-eksbuild.2",
                        "imageID": "docker-pullable://013241004608.dkr.ecr.us-gov-west-1.amazonaws.com/eks/kube-proxy@sha256:645736a55833f2b4a4785448d8da1c7add549d73943e8f9c893c696add1bed95",
                        "containerID": "docker://095c507f8a72870fed9ee1f41e21044aea20617be01b1b1a41738761a4be9945",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-m4glb ====
Copying CNI plugin binaries ... 
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
Configure rp_filter loose... 
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
+ echo 'Configure rp_filter loose... '
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  56000      0 --:--:-- --:--:-- --:--:-- 56000
++ TOKEN=AQAEAOixWBn7DbopKpFcBVHpRTdwYQz4MQ4CN5ilDxDjm6orPDAvtg==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAEAOixWBn7DbopKpFcBVHpRTdwYQz4MQ4CN5ilDxDjm6orPDAvtg==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    13  100    13    0     0  13000      0 --:--:-- --:--:-- --:--:-- 13000
++ meta=172.31.40.192
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 172.31.40.192
+ HOST_IP=172.31.40.192
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  56000      0 --:--:-- --:--:-- --:--:-- 56000
++ TOKEN=AQAEAOixWBnGYQxHDdCTke4k55Gc8rwvWq7hc-DfoKIsXxVo2bgYkA==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAEAOixWBnGYQxHDdCTke4k55Gc8rwvWq7hc-DfoKIsXxVo2bgYkA==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0  17000      0 --:--:-- --:--:-- --:--:-- 17000
++ meta=06:20:50:6e:e8:38
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 06:20:50:6e:e8:38
+ PRIMARY_MAC=06:20:50:6e:e8:38
++ ip -o link show
++ grep -F 'link/ether 06:20:50:6e:e8:38'
++ awk '-F[ :]+' '{print $2}'
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-m4glb ====
==== START logs for container aws-node of pod kube-system/aws-node-m4glb ====
{"level":"info","ts":"2021-03-02T21:47:34.255Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2021-03-02T21:47:34.256Z","caller":"entrypoint.sh","msg":"Install CNI binary.."}
{"level":"info","ts":"2021-03-02T21:47:34.270Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2021-03-02T21:47:34.285Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2021-03-02T21:47:36.305Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2021-03-02T21:47:36.307Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2021-03-02T21:47:36.308Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-m4glb ====
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-vd6lg ====
Copying CNI plugin binaries ... 
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
Configure rp_filter loose... 
+ echo 'Configure rp_filter loose... '
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  56000      0 --:--:-- --:--:-- --:--:-- 56000
++ TOKEN=AQAEABX3je36UbRv7H2ouBikarstRapRT7OQAjxST1je8Brm68nHqA==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAEABX3je36UbRv7H2ouBikarstRapRT7OQAjxST1je8Brm68nHqA==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    12  100    12    0     0  12000      0 --:--:-- --:--:-- --:--:-- 12000
++ meta=172.31.2.148
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 172.31.2.148
+ HOST_IP=172.31.2.148
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  56000      0 --:--:-- --:--:-- --:--:-- 56000
++ TOKEN=AQAEABX3je351raxUVtnjDhNdtc-l_LB_t-WG9eNZqtoXx_3QtDmXw==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAEABX3je351raxUVtnjDhNdtc-l_LB_t-WG9eNZqtoXx_3QtDmXw==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0  17000      0 --:--:-- --:--:-- --:--:-- 17000
++ meta=0a:c0:dd:4b:92:cc
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 0a:c0:dd:4b:92:cc
+ PRIMARY_MAC=0a:c0:dd:4b:92:cc
++ ip -o link show
++ grep -F 'link/ether 0a:c0:dd:4b:92:cc'
++ awk '-F[ :]+' '{print $2}'
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-vd6lg ====
==== START logs for container aws-node of pod kube-system/aws-node-vd6lg ====
{"level":"info","ts":"2021-03-02T21:48:02.919Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2021-03-02T21:48:02.920Z","caller":"entrypoint.sh","msg":"Install CNI binary.."}
{"level":"info","ts":"2021-03-02T21:48:02.934Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2021-03-02T21:48:02.948Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2021-03-02T21:48:04.974Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2021-03-02T21:48:04.976Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2021-03-02T21:48:04.977Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-vd6lg ====
==== START logs for container coredns of pod kube-system/coredns-5cf64856b4-cgsml ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.0
linux/amd64, go1.13.15, 054c9ae1
==== END logs for container coredns of pod kube-system/coredns-5cf64856b4-cgsml ====
==== START logs for container coredns of pod kube-system/coredns-5cf64856b4-wjr2w ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.0
linux/amd64, go1.13.15, 054c9ae1
==== END logs for container coredns of pod kube-system/coredns-5cf64856b4-wjr2w ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-ggx6v ====
I0302 21:46:12.921302       1 flags.go:59] FLAG: --add-dir-header="false"
I0302 21:46:12.921357       1 flags.go:59] FLAG: --alsologtostderr="false"
I0302 21:46:12.921362       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0302 21:46:12.921369       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0302 21:46:12.921375       1 flags.go:59] FLAG: --cleanup="false"
I0302 21:46:12.921379       1 flags.go:59] FLAG: --cleanup-ipvs="true"
I0302 21:46:12.921383       1 flags.go:59] FLAG: --cluster-cidr=""
I0302 21:46:12.921388       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0302 21:46:12.921394       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0302 21:46:12.921399       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0302 21:46:12.921406       1 flags.go:59] FLAG: --conntrack-min="131072"
I0302 21:46:12.921410       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0302 21:46:12.921415       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0302 21:46:12.921424       1 flags.go:59] FLAG: --detect-local-mode=""
I0302 21:46:12.921430       1 flags.go:59] FLAG: --feature-gates=""
I0302 21:46:12.921437       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0302 21:46:12.921443       1 flags.go:59] FLAG: --healthz-port="10256"
I0302 21:46:12.921447       1 flags.go:59] FLAG: --help="false"
I0302 21:46:12.921452       1 flags.go:59] FLAG: --hostname-override=""
I0302 21:46:12.921456       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0302 21:46:12.921460       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0302 21:46:12.921464       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0302 21:46:12.921468       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0302 21:46:12.921478       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0302 21:46:12.921482       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0302 21:46:12.921485       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0302 21:46:12.921489       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0302 21:46:12.921493       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0302 21:46:12.921497       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0302 21:46:12.921501       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0302 21:46:12.921505       1 flags.go:59] FLAG: --kube-api-burst="10"
I0302 21:46:12.921509       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0302 21:46:12.921514       1 flags.go:59] FLAG: --kube-api-qps="5"
I0302 21:46:12.921523       1 flags.go:59] FLAG: --kubeconfig=""
I0302 21:46:12.921527       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0302 21:46:12.921533       1 flags.go:59] FLAG: --log-dir=""
I0302 21:46:12.921537       1 flags.go:59] FLAG: --log-file=""
I0302 21:46:12.921541       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0302 21:46:12.921545       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0302 21:46:12.921548       1 flags.go:59] FLAG: --logtostderr="true"
I0302 21:46:12.921552       1 flags.go:59] FLAG: --masquerade-all="false"
I0302 21:46:12.921556       1 flags.go:59] FLAG: --master=""
I0302 21:46:12.921559       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0302 21:46:12.921564       1 flags.go:59] FLAG: --metrics-port="10249"
I0302 21:46:12.921568       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0302 21:46:12.921576       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0302 21:46:12.921581       1 flags.go:59] FLAG: --profiling="false"
I0302 21:46:12.921585       1 flags.go:59] FLAG: --proxy-mode=""
I0302 21:46:12.921591       1 flags.go:59] FLAG: --proxy-port-range=""
I0302 21:46:12.921597       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0302 21:46:12.921601       1 flags.go:59] FLAG: --skip-headers="false"
I0302 21:46:12.921609       1 flags.go:59] FLAG: --skip-log-headers="false"
I0302 21:46:12.921613       1 flags.go:59] FLAG: --stderrthreshold="2"
I0302 21:46:12.921617       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0302 21:46:12.921622       1 flags.go:59] FLAG: --v="2"
I0302 21:46:12.921627       1 flags.go:59] FLAG: --version="false"
I0302 21:46:12.921634       1 flags.go:59] FLAG: --vmodule=""
I0302 21:46:12.921638       1 flags.go:59] FLAG: --write-config-to=""
I0302 21:46:12.923304       1 feature_gate.go:243] feature gates: &{map[]}
I0302 21:46:12.923418       1 feature_gate.go:243] feature gates: &{map[]}
I0302 21:46:12.988535       1 node.go:136] Successfully retrieved node IP: 172.31.40.192
I0302 21:46:12.988664       1 server_others.go:142] kube-proxy node IP is an IPv4 address (172.31.40.192), assume IPv4 operation
I0302 21:46:13.006879       1 server_others.go:182] DetectLocalMode: 'ClusterCIDR'
I0302 21:46:13.006902       1 server_others.go:185] Using iptables Proxier.
W0302 21:46:13.006910       1 server_others.go:455] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
I0302 21:46:13.006914       1 server_others.go:466] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0302 21:46:13.006956       1 utils.go:367] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0302 21:46:13.007014       1 proxier.go:286] iptables(IPv4) masquerade mark: 0x00004000
I0302 21:46:13.007048       1 proxier.go:328] iptables(IPv4) sync params: minSyncPeriod=1s, syncPeriod=30s, burstSyncs=2
I0302 21:46:13.007081       1 proxier.go:340] iptables(IPv4) supports --random-fully
I0302 21:46:13.007222       1 server.go:650] Version: v1.19.6-eks-986540
I0302 21:46:13.007489       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0302 21:46:13.007513       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0302 21:46:13.007605       1 mount_linux.go:163] Detected OS without systemd
I0302 21:46:13.007774       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0302 21:46:13.016550       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0302 21:46:13.016601       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0302 21:46:13.016750       1 config.go:315] Starting service config controller
I0302 21:46:13.016763       1 shared_informer.go:240] Waiting for caches to sync for service config
I0302 21:46:13.016789       1 config.go:224] Starting endpoint slice config controller
I0302 21:46:13.016799       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0302 21:46:13.016970       1 reflector.go:207] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:134
I0302 21:46:13.017382       1 reflector.go:207] Starting reflector *v1beta1.EndpointSlice (15m0s) from k8s.io/client-go/informers/factory.go:134
I0302 21:46:13.019498       1 service.go:277] Service default/kubernetes updated: 1 ports
I0302 21:46:13.019562       1 service.go:277] Service kube-system/kube-dns updated: 2 ports
I0302 21:46:13.116896       1 shared_informer.go:247] Caches are synced for service config 
I0302 21:46:13.116896       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0302 21:46:13.117123       1 service.go:396] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0302 21:46:13.117144       1 service.go:396] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0302 21:46:13.117155       1 service.go:396] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0302 21:46:13.117209       1 proxier.go:845] Syncing iptables rules
I0302 21:46:13.400912       1 proxier.go:809] syncProxyRules took 283.961548ms
I0302 21:46:13.401112       1 proxier.go:845] Syncing iptables rules
I0302 21:46:13.460847       1 proxier.go:809] syncProxyRules took 59.892453ms
I0302 21:46:27.684459       1 proxier.go:845] Syncing iptables rules
I0302 21:46:27.752866       1 proxier.go:809] syncProxyRules took 68.582032ms
I0302 21:46:32.794428       1 proxier.go:837] Stale udp service kube-system/kube-dns:dns -> 10.100.0.10
I0302 21:46:32.794466       1 proxier.go:845] Syncing iptables rules
I0302 21:46:32.870332       1 proxier.go:809] syncProxyRules took 76.248983ms
I0302 21:46:35.123143       1 proxier.go:845] Syncing iptables rules
I0302 21:46:35.192911       1 proxier.go:809] syncProxyRules took 69.999675ms
I0302 21:46:36.278912       1 proxier.go:845] Syncing iptables rules
I0302 21:46:36.368957       1 proxier.go:809] syncProxyRules took 90.28159ms
I0302 22:46:36.369405       1 proxier.go:845] Syncing iptables rules
I0302 22:46:36.464990       1 proxier.go:809] syncProxyRules took 95.789711ms
I0302 23:46:36.465598       1 proxier.go:845] Syncing iptables rules
I0302 23:46:36.532895       1 proxier.go:809] syncProxyRules took 67.622475ms
I0303 00:46:36.533282       1 proxier.go:845] Syncing iptables rules
I0303 00:46:36.597014       1 proxier.go:809] syncProxyRules took 63.926224ms
I0303 01:46:36.597475       1 proxier.go:845] Syncing iptables rules
I0303 01:46:36.668935       1 proxier.go:809] syncProxyRules took 71.659564ms
I0303 02:46:36.669430       1 proxier.go:845] Syncing iptables rules
I0303 02:46:36.741035       1 proxier.go:809] syncProxyRules took 71.84215ms
I0303 03:46:36.741942       1 proxier.go:845] Syncing iptables rules
I0303 03:46:36.805543       1 proxier.go:809] syncProxyRules took 63.966356ms
I0303 04:46:36.806178       1 proxier.go:845] Syncing iptables rules
I0303 04:46:36.865106       1 proxier.go:809] syncProxyRules took 59.123436ms
I0303 05:46:36.865551       1 proxier.go:845] Syncing iptables rules
I0303 05:46:36.929142       1 proxier.go:809] syncProxyRules took 63.808065ms
I0303 06:46:36.929535       1 proxier.go:845] Syncing iptables rules
I0303 06:46:37.002798       1 proxier.go:809] syncProxyRules took 73.460235ms
I0303 07:46:37.003189       1 proxier.go:845] Syncing iptables rules
I0303 07:46:37.065132       1 proxier.go:809] syncProxyRules took 62.145798ms
I0303 08:46:37.065530       1 proxier.go:845] Syncing iptables rules
I0303 08:46:37.128917       1 proxier.go:809] syncProxyRules took 63.592132ms
I0303 09:46:37.129442       1 proxier.go:845] Syncing iptables rules
I0303 09:46:37.185044       1 proxier.go:809] syncProxyRules took 55.829295ms
I0303 10:46:37.185415       1 proxier.go:845] Syncing iptables rules
I0303 10:46:37.256881       1 proxier.go:809] syncProxyRules took 71.654196ms
I0303 11:46:37.257427       1 proxier.go:845] Syncing iptables rules
I0303 11:46:37.320875       1 proxier.go:809] syncProxyRules took 63.693374ms
I0303 12:46:37.321441       1 proxier.go:845] Syncing iptables rules
I0303 12:46:37.377055       1 proxier.go:809] syncProxyRules took 55.881163ms
I0303 13:46:37.377529       1 proxier.go:845] Syncing iptables rules
I0303 13:46:37.468962       1 proxier.go:809] syncProxyRules took 91.620908ms
I0303 14:46:37.469472       1 proxier.go:845] Syncing iptables rules
I0303 14:46:37.524924       1 proxier.go:809] syncProxyRules took 55.681368ms
I0303 15:12:08.338015       1 service.go:277] Service default/todomaterial-service updated: 1 ports
I0303 15:12:08.338286       1 service.go:396] Adding new service port "default/todomaterial-service:http" at 10.100.162.45:80/TCP
I0303 15:12:08.338411       1 proxier.go:845] Syncing iptables rules
I0303 15:12:08.421040       1 proxier.go:809] syncProxyRules took 82.945395ms
I0303 15:12:08.421490       1 proxier.go:845] Syncing iptables rules
I0303 15:12:08.509054       1 proxier.go:809] syncProxyRules took 87.804477ms
I0303 16:12:08.509589       1 proxier.go:845] Syncing iptables rules
I0303 16:12:08.564993       1 proxier.go:809] syncProxyRules took 55.602249ms
I0303 16:32:19.100065       1 service.go:277] Service ingress-nginx/ingress-nginx-controller-admission updated: 1 ports
I0303 16:32:19.100341       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller-admission:https-webhook" at 10.100.136.70:443/TCP
I0303 16:32:19.100420       1 proxier.go:845] Syncing iptables rules
I0303 16:32:19.168991       1 proxier.go:809] syncProxyRules took 68.844914ms
I0303 16:32:19.169357       1 proxier.go:845] Syncing iptables rules
I0303 16:32:19.221030       1 proxier.go:809] syncProxyRules took 51.868491ms
I0303 16:32:19.520277       1 service.go:277] Service ingress-nginx/ingress-nginx-controller updated: 2 ports
I0303 16:32:19.559994       1 service.go:277] Service ingress-nginx/ingress-nginx-controller updated: 2 ports
I0303 16:32:20.221396       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller:http" at 10.100.113.232:80/TCP
I0303 16:32:20.221419       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller:https" at 10.100.113.232:443/TCP
I0303 16:32:20.221457       1 proxier.go:845] Syncing iptables rules
I0303 16:32:20.280940       1 proxier.go:1681] Opened local port "nodePort for ingress-nginx/ingress-nginx-controller:http" (:31028/tcp)
I0303 16:32:20.280981       1 proxier.go:1681] Opened local port "nodePort for ingress-nginx/ingress-nginx-controller:https" (:32501/tcp)
I0303 16:32:20.320958       1 service_health.go:98] Opening healthcheck "ingress-nginx/ingress-nginx-controller" on port 31473
I0303 16:32:20.321105       1 proxier.go:809] syncProxyRules took 99.929916ms
I0303 16:32:37.122233       1 proxier.go:845] Syncing iptables rules
I0303 16:32:37.188865       1 proxier.go:809] syncProxyRules took 66.86404ms
I0303 16:32:37.189201       1 proxier.go:845] Syncing iptables rules
I0303 16:32:37.248910       1 proxier.go:809] syncProxyRules took 59.969898ms
I0303 16:32:52.789047       1 proxier.go:845] Syncing iptables rules
I0303 16:32:52.860894       1 proxier.go:809] syncProxyRules took 72.101194ms
I0303 16:32:52.861267       1 proxier.go:845] Syncing iptables rules
I0303 16:32:52.920892       1 proxier.go:809] syncProxyRules took 59.844585ms
I0303 17:32:52.921398       1 proxier.go:845] Syncing iptables rules
I0303 17:32:52.977054       1 proxier.go:809] syncProxyRules took 55.877175ms
==== END logs for container kube-proxy of pod kube-system/kube-proxy-ggx6v ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-qmw6k ====
I0302 21:46:16.316430       1 flags.go:59] FLAG: --add-dir-header="false"
I0302 21:46:16.316493       1 flags.go:59] FLAG: --alsologtostderr="false"
I0302 21:46:16.316497       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0302 21:46:16.316502       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0302 21:46:16.316514       1 flags.go:59] FLAG: --cleanup="false"
I0302 21:46:16.316518       1 flags.go:59] FLAG: --cleanup-ipvs="true"
I0302 21:46:16.316522       1 flags.go:59] FLAG: --cluster-cidr=""
I0302 21:46:16.316526       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0302 21:46:16.316531       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0302 21:46:16.316536       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0302 21:46:16.316543       1 flags.go:59] FLAG: --conntrack-min="131072"
I0302 21:46:16.316547       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0302 21:46:16.316552       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0302 21:46:16.316557       1 flags.go:59] FLAG: --detect-local-mode=""
I0302 21:46:16.316570       1 flags.go:59] FLAG: --feature-gates=""
I0302 21:46:16.316577       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0302 21:46:16.316587       1 flags.go:59] FLAG: --healthz-port="10256"
I0302 21:46:16.316592       1 flags.go:59] FLAG: --help="false"
I0302 21:46:16.316597       1 flags.go:59] FLAG: --hostname-override=""
I0302 21:46:16.316601       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0302 21:46:16.316606       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0302 21:46:16.316610       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0302 21:46:16.316615       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0302 21:46:16.316632       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0302 21:46:16.316636       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0302 21:46:16.316640       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0302 21:46:16.316644       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0302 21:46:16.316649       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0302 21:46:16.316653       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0302 21:46:16.316657       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0302 21:46:16.316661       1 flags.go:59] FLAG: --kube-api-burst="10"
I0302 21:46:16.316665       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0302 21:46:16.316671       1 flags.go:59] FLAG: --kube-api-qps="5"
I0302 21:46:16.316679       1 flags.go:59] FLAG: --kubeconfig=""
I0302 21:46:16.316689       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0302 21:46:16.316700       1 flags.go:59] FLAG: --log-dir=""
I0302 21:46:16.316704       1 flags.go:59] FLAG: --log-file=""
I0302 21:46:16.316708       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0302 21:46:16.316713       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0302 21:46:16.316717       1 flags.go:59] FLAG: --logtostderr="true"
I0302 21:46:16.316722       1 flags.go:59] FLAG: --masquerade-all="false"
I0302 21:46:16.316726       1 flags.go:59] FLAG: --master=""
I0302 21:46:16.316730       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0302 21:46:16.316735       1 flags.go:59] FLAG: --metrics-port="10249"
I0302 21:46:16.316740       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0302 21:46:16.316752       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0302 21:46:16.316757       1 flags.go:59] FLAG: --profiling="false"
I0302 21:46:16.316761       1 flags.go:59] FLAG: --proxy-mode=""
I0302 21:46:16.316767       1 flags.go:59] FLAG: --proxy-port-range=""
I0302 21:46:16.316773       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0302 21:46:16.316777       1 flags.go:59] FLAG: --skip-headers="false"
I0302 21:46:16.316782       1 flags.go:59] FLAG: --skip-log-headers="false"
I0302 21:46:16.316790       1 flags.go:59] FLAG: --stderrthreshold="2"
I0302 21:46:16.316795       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0302 21:46:16.316800       1 flags.go:59] FLAG: --v="2"
I0302 21:46:16.316805       1 flags.go:59] FLAG: --version="false"
I0302 21:46:16.316814       1 flags.go:59] FLAG: --vmodule=""
I0302 21:46:16.316818       1 flags.go:59] FLAG: --write-config-to=""
I0302 21:46:16.318443       1 feature_gate.go:243] feature gates: &{map[]}
I0302 21:46:16.318589       1 feature_gate.go:243] feature gates: &{map[]}
I0302 21:46:16.376501       1 node.go:136] Successfully retrieved node IP: 172.31.2.148
I0302 21:46:16.376537       1 server_others.go:142] kube-proxy node IP is an IPv4 address (172.31.2.148), assume IPv4 operation
I0302 21:46:16.389270       1 server_others.go:182] DetectLocalMode: 'ClusterCIDR'
I0302 21:46:16.389294       1 server_others.go:185] Using iptables Proxier.
W0302 21:46:16.389302       1 server_others.go:455] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
I0302 21:46:16.389306       1 server_others.go:466] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0302 21:46:16.389346       1 utils.go:367] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0302 21:46:16.389396       1 proxier.go:286] iptables(IPv4) masquerade mark: 0x00004000
I0302 21:46:16.389432       1 proxier.go:328] iptables(IPv4) sync params: minSyncPeriod=1s, syncPeriod=30s, burstSyncs=2
I0302 21:46:16.389471       1 proxier.go:340] iptables(IPv4) supports --random-fully
I0302 21:46:16.389620       1 server.go:650] Version: v1.19.6-eks-986540
I0302 21:46:16.389965       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0302 21:46:16.390011       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0302 21:46:16.390107       1 mount_linux.go:163] Detected OS without systemd
I0302 21:46:16.390633       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0302 21:46:16.400305       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0302 21:46:16.400358       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0302 21:46:16.400524       1 config.go:315] Starting service config controller
I0302 21:46:16.400537       1 shared_informer.go:240] Waiting for caches to sync for service config
I0302 21:46:16.400558       1 config.go:224] Starting endpoint slice config controller
I0302 21:46:16.400563       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0302 21:46:16.400745       1 reflector.go:207] Starting reflector *v1beta1.EndpointSlice (15m0s) from k8s.io/client-go/informers/factory.go:134
I0302 21:46:16.401204       1 reflector.go:207] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:134
I0302 21:46:16.404240       1 service.go:277] Service default/kubernetes updated: 1 ports
I0302 21:46:16.404290       1 service.go:277] Service kube-system/kube-dns updated: 2 ports
I0302 21:46:16.500663       1 shared_informer.go:247] Caches are synced for service config 
I0302 21:46:16.500663       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0302 21:46:16.500900       1 service.go:396] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0302 21:46:16.500926       1 service.go:396] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0302 21:46:16.500940       1 service.go:396] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0302 21:46:16.501004       1 proxier.go:845] Syncing iptables rules
I0302 21:46:16.748628       1 proxier.go:809] syncProxyRules took 247.887603ms
I0302 21:46:16.748829       1 proxier.go:845] Syncing iptables rules
I0302 21:46:16.820683       1 proxier.go:809] syncProxyRules took 72.010593ms
I0302 21:46:27.683362       1 proxier.go:845] Syncing iptables rules
I0302 21:46:27.740718       1 proxier.go:809] syncProxyRules took 57.500725ms
I0302 21:46:32.793915       1 proxier.go:837] Stale udp service kube-system/kube-dns:dns -> 10.100.0.10
I0302 21:46:32.793958       1 proxier.go:845] Syncing iptables rules
I0302 21:46:32.862729       1 proxier.go:809] syncProxyRules took 69.020014ms
I0302 21:46:35.122725       1 proxier.go:845] Syncing iptables rules
I0302 21:46:35.180685       1 proxier.go:809] syncProxyRules took 58.122619ms
I0302 21:46:36.278293       1 proxier.go:845] Syncing iptables rules
I0302 21:46:36.337051       1 proxier.go:809] syncProxyRules took 58.927673ms
I0302 22:46:36.337461       1 proxier.go:845] Syncing iptables rules
I0302 22:46:36.392576       1 proxier.go:809] syncProxyRules took 55.273862ms
I0302 23:46:36.392854       1 proxier.go:845] Syncing iptables rules
I0302 23:46:36.448724       1 proxier.go:809] syncProxyRules took 56.006987ms
I0303 00:46:36.449173       1 proxier.go:845] Syncing iptables rules
I0303 00:46:36.508560       1 proxier.go:809] syncProxyRules took 59.528955ms
I0303 01:46:36.508912       1 proxier.go:845] Syncing iptables rules
I0303 01:46:36.572646       1 proxier.go:809] syncProxyRules took 63.873274ms
I0303 02:46:36.573127       1 proxier.go:845] Syncing iptables rules
I0303 02:46:36.664693       1 proxier.go:809] syncProxyRules took 91.723834ms
I0303 03:46:36.664939       1 proxier.go:845] Syncing iptables rules
I0303 03:46:36.728683       1 proxier.go:809] syncProxyRules took 63.885829ms
I0303 04:46:36.728992       1 proxier.go:845] Syncing iptables rules
I0303 04:46:36.796759       1 proxier.go:809] syncProxyRules took 67.896853ms
I0303 05:46:36.797113       1 proxier.go:845] Syncing iptables rules
I0303 05:46:36.864685       1 proxier.go:809] syncProxyRules took 67.728213ms
I0303 06:46:36.865007       1 proxier.go:845] Syncing iptables rules
I0303 06:46:36.932729       1 proxier.go:809] syncProxyRules took 67.888296ms
I0303 07:46:36.933060       1 proxier.go:845] Syncing iptables rules
I0303 07:46:36.996675       1 proxier.go:809] syncProxyRules took 63.750522ms
I0303 08:46:36.997165       1 proxier.go:845] Syncing iptables rules
I0303 08:46:37.096685       1 proxier.go:809] syncProxyRules took 99.68883ms
I0303 09:46:37.097099       1 proxier.go:845] Syncing iptables rules
I0303 09:46:37.164715       1 proxier.go:809] syncProxyRules took 67.752169ms
I0303 10:46:37.165170       1 proxier.go:845] Syncing iptables rules
I0303 10:46:37.220695       1 proxier.go:809] syncProxyRules took 55.6751ms
I0303 11:46:37.221012       1 proxier.go:845] Syncing iptables rules
I0303 11:46:37.284825       1 proxier.go:809] syncProxyRules took 63.954749ms
I0303 12:46:37.285294       1 proxier.go:845] Syncing iptables rules
I0303 12:46:37.348698       1 proxier.go:809] syncProxyRules took 63.555931ms
I0303 13:46:37.349068       1 proxier.go:845] Syncing iptables rules
I0303 13:46:37.400618       1 proxier.go:809] syncProxyRules took 51.687901ms
I0303 14:46:37.400939       1 proxier.go:845] Syncing iptables rules
I0303 14:46:37.456641       1 proxier.go:809] syncProxyRules took 55.859301ms
I0303 15:12:08.337789       1 service.go:277] Service default/todomaterial-service updated: 1 ports
I0303 15:12:08.338113       1 service.go:396] Adding new service port "default/todomaterial-service:http" at 10.100.162.45:80/TCP
I0303 15:12:08.338155       1 proxier.go:845] Syncing iptables rules
I0303 15:12:08.400850       1 proxier.go:809] syncProxyRules took 62.975962ms
I0303 15:12:08.401105       1 proxier.go:845] Syncing iptables rules
I0303 15:12:08.468678       1 proxier.go:809] syncProxyRules took 67.785806ms
I0303 16:12:08.469069       1 proxier.go:845] Syncing iptables rules
I0303 16:12:08.524647       1 proxier.go:809] syncProxyRules took 55.773188ms
I0303 16:32:19.100071       1 service.go:277] Service ingress-nginx/ingress-nginx-controller-admission updated: 1 ports
I0303 16:32:19.100291       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller-admission:https-webhook" at 10.100.136.70:443/TCP
I0303 16:32:19.100320       1 proxier.go:845] Syncing iptables rules
I0303 16:32:19.152722       1 proxier.go:809] syncProxyRules took 52.582148ms
I0303 16:32:19.153055       1 proxier.go:845] Syncing iptables rules
I0303 16:32:19.212701       1 proxier.go:809] syncProxyRules took 59.892202ms
I0303 16:32:19.520073       1 service.go:277] Service ingress-nginx/ingress-nginx-controller updated: 2 ports
I0303 16:32:19.559768       1 service.go:277] Service ingress-nginx/ingress-nginx-controller updated: 2 ports
I0303 16:32:20.212972       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller:http" at 10.100.113.232:80/TCP
I0303 16:32:20.212993       1 service.go:396] Adding new service port "ingress-nginx/ingress-nginx-controller:https" at 10.100.113.232:443/TCP
I0303 16:32:20.213024       1 proxier.go:845] Syncing iptables rules
I0303 16:32:20.234471       1 proxier.go:1681] Opened local port "nodePort for ingress-nginx/ingress-nginx-controller:http" (:31028/tcp)
I0303 16:32:20.234564       1 proxier.go:1681] Opened local port "nodePort for ingress-nginx/ingress-nginx-controller:https" (:32501/tcp)
I0303 16:32:20.276638       1 service_health.go:98] Opening healthcheck "ingress-nginx/ingress-nginx-controller" on port 31473
I0303 16:32:20.276768       1 proxier.go:809] syncProxyRules took 63.96091ms
I0303 16:32:37.121671       1 proxier.go:845] Syncing iptables rules
I0303 16:32:37.176679       1 proxier.go:809] syncProxyRules took 55.191794ms
I0303 16:32:37.176899       1 proxier.go:845] Syncing iptables rules
I0303 16:32:37.229306       1 proxier.go:809] syncProxyRules took 52.596756ms
I0303 16:32:52.788961       1 proxier.go:845] Syncing iptables rules
I0303 16:32:52.848810       1 proxier.go:809] syncProxyRules took 60.02614ms
I0303 16:32:52.849059       1 proxier.go:845] Syncing iptables rules
I0303 16:32:52.908795       1 proxier.go:809] syncProxyRules took 59.952563ms
I0303 17:32:52.909325       1 proxier.go:845] Syncing iptables rules
I0303 17:32:52.964741       1 proxier.go:809] syncProxyRules took 55.619752ms
==== END logs for container kube-proxy of pod kube-system/kube-proxy-qmw6k ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "210279"
    },
    "items": [
        {
            "metadata": {
                "name": "service-ingress.1668e86b236d72db",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/events/service-ingress.1668e86b236d72db",
                "uid": "d067c9e1-8d70-4264-9ac9-81178d62c4ba",
                "resourceVersion": "210071",
                "creationTimestamp": "2021-03-03T18:26:53Z",
                "managedFields": [
                    {
                        "manager": "nginx-ingress-controller",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-03T18:26:53Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:count": {},
                            "f:firstTimestamp": {},
                            "f:involvedObject": {
                                "f:apiVersion": {},
                                "f:kind": {},
                                "f:name": {},
                                "f:namespace": {},
                                "f:resourceVersion": {},
                                "f:uid": {}
                            },
                            "f:lastTimestamp": {},
                            "f:message": {},
                            "f:reason": {},
                            "f:source": {
                                "f:component": {}
                            },
                            "f:type": {}
                        }
                    }
                ]
            },
            "involvedObject": {
                "kind": "Ingress",
                "namespace": "default",
                "name": "service-ingress",
                "uid": "0b68be24-5b26-47a7-8171-9094926a9b44",
                "apiVersion": "networking.k8s.io/v1beta1",
                "resourceVersion": "210070"
            },
            "reason": "Sync",
            "message": "Scheduled for sync",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2021-03-03T18:26:53Z",
            "lastTimestamp": "2021-03-03T18:26:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "210279"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "210281"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "a8ea2b1e-e782-458b-950f-c40bbe528a9d",
                "resourceVersion": "154",
                "creationTimestamp": "2021-03-02T21:41:24Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "managedFields": [
                    {
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-02T21:41:24Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:component": {},
                                    "f:provider": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.100.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "todomaterial-service",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/todomaterial-service",
                "uid": "6e0033f8-92ee-4073-b5b4-b04d71a14855",
                "resourceVersion": "176383",
                "creationTimestamp": "2021-03-03T15:12:08Z",
                "labels": {
                    "run": "todomaterial-service"
                },
                "managedFields": [
                    {
                        "manager": "kubectl-create",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-03T15:12:08Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:run": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {
                                    ".": {},
                                    "f:app": {}
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 80
                    }
                ],
                "selector": {
                    "app": "todomaterial"
                },
                "clusterIP": "10.100.162.45",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "210281"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "210281"
    },
    "items": [
        {
            "metadata": {
                "name": "todomaterial",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/deployments/todomaterial",
                "uid": "94b8e7cf-6c59-4df0-9618-758bac78ca4c",
                "resourceVersion": "175931",
                "generation": 1,
                "creationTimestamp": "2021-03-03T15:09:19Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "managedFields": [
                    {
                        "manager": "kubectl-create",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-03T15:09:19Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {}
                                    }
                                },
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"todomaterial\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:tty": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            }
                        }
                    },
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-03T15:09:25Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "todomaterial"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "todomaterial"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "todomaterial",
                                "image": "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial:latest",
                                "ports": [
                                    {
                                        "name": "nginx",
                                        "hostPort": 80,
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "64Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "tty": true
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2021-03-03T15:09:19Z",
                        "lastTransitionTime": "2021-03-03T15:09:19Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2021-03-03T15:09:25Z",
                        "lastTransitionTime": "2021-03-03T15:09:19Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"todomaterial-7746d7c8c6\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "210281"
    },
    "items": [
        {
            "metadata": {
                "name": "todomaterial-7746d7c8c6",
                "namespace": "default",
                "selfLink": "/apis/apps/v1/namespaces/default/replicasets/todomaterial-7746d7c8c6",
                "uid": "66697299-5a57-4ca6-b31e-f8d41d28423a",
                "resourceVersion": "175930",
                "generation": 1,
                "creationTimestamp": "2021-03-03T15:09:19Z",
                "labels": {
                    "app": "todomaterial",
                    "pod-template-hash": "7746d7c8c6"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "todomaterial",
                        "uid": "94b8e7cf-6c59-4df0-9618-758bac78ca4c",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "apps/v1",
                        "time": "2021-03-03T15:09:25Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"94b8e7cf-6c59-4df0-9618-758bac78ca4c\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {
                                    "f:matchLabels": {
                                        ".": {},
                                        "f:app": {},
                                        "f:pod-template-hash": {}
                                    }
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"todomaterial\"}": {
                                                ".": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:hostPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {
                                                    ".": {},
                                                    "f:limits": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        ".": {},
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:tty": {}
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {},
                                        "f:terminationGracePeriodSeconds": {}
                                    }
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "todomaterial",
                        "pod-template-hash": "7746d7c8c6"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "todomaterial",
                            "pod-template-hash": "7746d7c8c6"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "todomaterial",
                                "image": "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial:latest",
                                "ports": [
                                    {
                                        "name": "nginx",
                                        "hostPort": 80,
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "64Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always",
                                "tty": true
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "210281"
    },
    "items": [
        {
            "metadata": {
                "name": "todomaterial-7746d7c8c6-fcn74",
                "generateName": "todomaterial-7746d7c8c6-",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/pods/todomaterial-7746d7c8c6-fcn74",
                "uid": "e7492e40-0020-4bfe-aa32-21bd254a8fb5",
                "resourceVersion": "175929",
                "creationTimestamp": "2021-03-03T15:09:19Z",
                "labels": {
                    "app": "todomaterial",
                    "pod-template-hash": "7746d7c8c6"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "todomaterial-7746d7c8c6",
                        "uid": "66697299-5a57-4ca6-b31e-f8d41d28423a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ],
                "managedFields": [
                    {
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-03T15:09:19Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"66697299-5a57-4ca6-b31e-f8d41d28423a\"}": {
                                        ".": {},
                                        "f:apiVersion": {},
                                        "f:blockOwnerDeletion": {},
                                        "f:controller": {},
                                        "f:kind": {},
                                        "f:name": {},
                                        "f:uid": {}
                                    }
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"todomaterial\"}": {
                                        ".": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:hostPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:tty": {}
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {},
                                "f:terminationGracePeriodSeconds": {}
                            }
                        }
                    },
                    {
                        "manager": "kubelet",
                        "operation": "Update",
                        "apiVersion": "v1",
                        "time": "2021-03-03T15:09:25Z",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"172.31.2.43\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        }
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-gwmw2",
                        "secret": {
                            "secretName": "default-token-gwmw2",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "todomaterial",
                        "image": "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial:latest",
                        "ports": [
                            {
                                "name": "nginx",
                                "hostPort": 80,
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "250m",
                                "memory": "64Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "default-token-gwmw2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always",
                        "tty": true
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "ip-172-31-2-148.us-gov-west-1.compute.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-03T15:09:19Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-03T15:09:25Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-03T15:09:25Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2021-03-03T15:09:19Z"
                    }
                ],
                "hostIP": "172.31.2.148",
                "podIP": "172.31.2.43",
                "podIPs": [
                    {
                        "ip": "172.31.2.43"
                    }
                ],
                "startTime": "2021-03-03T15:09:19Z",
                "containerStatuses": [
                    {
                        "name": "todomaterial",
                        "state": {
                            "running": {
                                "startedAt": "2021-03-03T15:09:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial:latest",
                        "imageID": "docker-pullable://236864801136.dkr.ecr.us-gov-west-1.amazonaws.com/todomaterial@sha256:a2ec17bf0f75b2a17c929b612b5267dcd0c522a9458494fadae00f4d176e5300",
                        "containerID": "docker://b1daacae4ffdb53605598b3876a5084a2077998fabb1748a977513dc3aa00d86",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container todomaterial of pod default/todomaterial-7746d7c8c6-fcn74 ====
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
==== END logs for container todomaterial of pod default/todomaterial-7746d7c8c6-fcn74 ====
